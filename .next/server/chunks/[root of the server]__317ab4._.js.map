{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file://E%3A/islamic-donation-management-system/helpers/getDataFromToken.ts"],"sourcesContent":["// import { NextRequest } from \"next/server\";\n// import jwt from \"jsonwebtoken\";\n// export const getDataFromToken = (request: NextRequest) => {\n//     try {\n//       const token = request.cookies.get(\"token\")?.value || '';\n//       const decodedToken: any = jwt.verify(token, process.env.TOKEN_SECRET!);\n  \n//       // Assuming the token contains both `id` and `role`\n//       return { id: decodedToken.id, role: decodedToken.role, username: decodedToken.username };\n//     } catch (error) {\n//           console.error(\"Error decoding token i dunno why:\", error); // Log detailed error for debugging\n//           throw new Error(error.message || \"Token verification failed\");\n//         }\n//   };\n\nimport { NextRequest } from \"next/server\";\nimport jwt from \"jsonwebtoken\";\n\ninterface DecodedToken {\n  id: string;\n  role: string;\n  username: string;\n  email: string;\n}\n\nexport const getDataFromToken = (request: NextRequest) => {\n  try {\n    console.log(\"Cookies:\", request.cookies); // Log cookies to check structure\n    const token = request.cookies?.get(\"token\")?.value || ''; // Safely access token\n\n    if (!token) throw new Error(\"Token not found\");\n\n    if (!process.env.JWT_SECRET_KEY) {\n      throw new Error(\"JWT_SECRET_KEY is not set in environment variables.\");\n    }\n\n    const decodedToken = jwt.verify(token, process.env.JWT_SECRET_KEY!) as DecodedToken;\n    return {\n      id: decodedToken.id,\n      role: decodedToken.role,\n      username: decodedToken.username,\n      email: decodedToken.email,\n    };\n  } catch (error) {\n    console.error(\"Error decoding token:\", error); // Log detailed error for debugging\n    throw new Error(\"Token verification failed: \" + error.message);\n  }\n};\n"],"names":[],"mappings":"AAAA,6CAA6C;AAC7C,kCAAkC;AAClC,8DAA8D;AAC9D,YAAY;AACZ,iEAAiE;AACjE,gFAAgF;AAEhF,4DAA4D;AAC5D,kGAAkG;AAClG,wBAAwB;AACxB,2GAA2G;AAC3G,2EAA2E;AAC3E,YAAY;AACZ,OAAO;;;;AAGP;;AASO,MAAM,mBAAmB,CAAC;IAC/B,IAAI;QACF,QAAQ,GAAG,CAAC,YAAY,QAAQ,OAAO,GAAG,iCAAiC;QAC3E,MAAM,QAAQ,QAAQ,OAAO,EAAE,IAAI,UAAU,SAAS,IAAI,sBAAsB;QAEhF,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM;QAE5B,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;YAC/B,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,eAAe,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,cAAc;QACjE,OAAO;YACL,IAAI,aAAa,EAAE;YACnB,MAAM,aAAa,IAAI;YACvB,UAAU,aAAa,QAAQ;YAC/B,OAAO,aAAa,KAAK;QAC3B;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB,QAAQ,mCAAmC;QAClF,MAAM,IAAI,MAAM,gCAAgC,MAAM,OAAO;IAC/D;AACF"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file://E%3A/islamic-donation-management-system/app/api/auth/get-user-details/route.ts"],"sourcesContent":["// import { NextRequest, NextResponse } from \"next/server\";\r\n// import { getDataFromToken } from \"@/helpers/getDataFromToken\";\r\n\r\n// export async function GET(request: NextRequest) {\r\n//   try {\r\n//     // Get user details from token\r\n//     const userDetails = getDataFromToken(request);\r\n    \r\n//     return NextResponse.json({\r\n//       success: true,\r\n//       data: userDetails,  // Send user info to client\r\n//     });\r\n//   } catch (error) {\r\n//     return NextResponse.json({\r\n//       error: \"Unauthorized\",\r\n//     }, { status: 401 });\r\n//   }\r\n// }\r\n\r\n\r\n\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { getDataFromToken } from \"@/helpers/getDataFromToken\";\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const userDetails = await getDataFromToken(request); // Ensure it is awaited if needed\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: userDetails,\r\n    });\r\n  } catch (error) {\r\n    return NextResponse.json({\r\n      error: \"Unauthorized\",\r\n    }, { status: 401 });\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":"AAAA,2DAA2D;AAC3D,iEAAiE;AAEjE,oDAAoD;AACpD,UAAU;AACV,qCAAqC;AACrC,qDAAqD;AAErD,iCAAiC;AACjC,uBAAuB;AACvB,wDAAwD;AACxD,UAAU;AACV,sBAAsB;AACtB,iCAAiC;AACjC,+BAA+B;AAC/B,2BAA2B;AAC3B,MAAM;AACN,IAAI;;;;AAIJ;AACA;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,cAAc,MAAM,CAAA,GAAA,6HAAA,CAAA,mBAAgB,AAAD,EAAE,UAAU,iCAAiC;QAEtF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,OAAO;QACT,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}