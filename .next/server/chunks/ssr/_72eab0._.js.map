{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/islamic-donation-management-system/components/DonationForm.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/DonationForm.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/DonationForm.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file://E%3A/islamic-donation-management-system/components/DonationForm.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/DonationForm.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/DonationForm.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2Q,GACxS,yCACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file://E%3A/islamic-donation-management-system/app/donation/page.tsx"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\r\nimport Stripe from 'stripe';\r\nimport { PrismaClient } from '@prisma/client'; // Assuming you are using Prisma\r\n\r\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, { apiVersion: '2022-11-15' });\r\nconst prisma = new PrismaClient();\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n  if (req.method === 'POST') {\r\n    const { amount, type, paymentMethod, userID } = req.body;\r\n\r\n    try {\r\n      // Create Stripe payment intent\r\n      const paymentIntent = await stripe.paymentIntents.create({\r\n        amount: amount * 100, // Convert amount to cents\r\n        currency: 'usd',\r\n        payment_method_types: ['card'],\r\n      });\r\n\r\n      // Save donation in the database\r\n      const donation = await prisma.donation.create({\r\n        data: {\r\n          Amount: amount,\r\n          Type: type,\r\n          PaymentMethod: paymentMethod,\r\n          Date: Math.floor(Date.now() / 1000),\r\n          UserID: userID,\r\n          PaymentStatus: 'Pending',\r\n        },\r\n      });\r\n\r\n      res.status(200).json({ success: true, clientSecret: paymentIntent.client_secret, donation });\r\n    } catch (error) {\r\n      console.error(error);\r\n      res.status(500).json({ error: 'Internal server error' });\r\n    }\r\n  } else {\r\n    res.setHeader('Allow', ['POST']);\r\n    res.status(405).end(`Method ${req.method} Not Allowed`);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AACA;;;;;;;;AAGA,MAAM,SAAS,IAAI,sJAAA,CAAA,UAAM,CAAC,QAAQ,GAAG,CAAC,iBAAiB,EAAG;IAAE,YAAY;AAAa;AACrF,MAAM,SAAS,IAAI;AAEJ,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC7E,IAAI,IAAI,MAAM,KAAK,QAAQ;QACzB,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,GAAG,IAAI,IAAI;QAExD,IAAI;YACF,+BAA+B;YAC/B,MAAM,gBAAgB,MAAM,OAAO,cAAc,CAAC,MAAM,CAAC;gBACvD,QAAQ,SAAS;gBACjB,UAAU;gBACV,sBAAsB;oBAAC;iBAAO;YAChC;YAEA,gCAAgC;YAChC,MAAM,WAAW,MAAM,OAAO,QAAQ,CAAC,MAAM,CAAC;gBAC5C,MAAM;oBACJ,QAAQ;oBACR,MAAM;oBACN,eAAe;oBACf,MAAM,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK;oBAC9B,QAAQ;oBACR,eAAe;gBACjB;YACF;YAEA,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;gBAAM,cAAc,cAAc,aAAa;gBAAE;YAAS;QAC5F,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC;YACd,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAwB;QACxD;IACF,OAAO;QACL,IAAI,SAAS,CAAC,SAAS;YAAC;SAAO;QAC/B,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI,MAAM,CAAC,YAAY,CAAC;IACxD;AACF"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file://E%3A/islamic-donation-management-system/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAeA,cAAc;AAdd,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAKzE,SAASE,IAAI,EAAEC,KAAK,GAAE;AAStB,iCAAiC;;;;;;;;AAEjC,OAAO,MAAMG,eAAe,6CAAA;IAC1BC,MAAAA,GAASC;IACTC,EAAAA,OAAAA;IAAAA,CAAWC;IAAAA;QACb,EAAC,UAAA;YAAA;YAAA;gBAED,YAAA;oBAAA,CAAc;oBAAA,CAEd,yBAFkD;oBAElD,yDAA4D;wBAC5D,KAAO,KAAA,CAAMC;wBAAAA,QAAc;4BAAA,GAAIX,CAAAA,gBAAmB;4BAAA;yBAAA;;mBAChDY,YAAY;;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;YAAA;SAAA;;SACNC,UAAU;cACV,IAAA;YAAA,MAAA,4BAA2C;iBAC3CC,MAAAA,MAAY,EAAA;wBAAA;4BACZC,KAAAA,CAAAA,GAAAA,CAAU,0KAAVA,CAAAA,sBAAU,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACVC,OAAAA,uSAAU,EAAE,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACd,MAAA,CAAA,YAAA,CAAA;wBACAC;qBAAAA,MAAU;gBACRC,YAAYnB;UACd;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA;QACF,CAAE,YAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}