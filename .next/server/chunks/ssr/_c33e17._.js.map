{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(auth-pages)/login/page.tsx"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // pages/login.tsx\r\n// 'use client'\r\n// import React, { useState } from \"react\";\r\n// import GeneralForm from \"@/components/forms/GeneralForm\";\r\n// import axios from \"axios\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import { loginSchema } from \"@/schemas/validationSchema\"; // Import the validation schema\r\n\r\n// const LoginPage = () => {\r\n//   const router = useRouter();\r\n//   const [isSignup, setIsSignup] = useState(false);\r\n\r\n//   const onLogin = async (user: { email: string; password: string }) => {\r\n//     try {\r\n//       const response = await axios.post(\"/api/auth/login\", user);\r\n//       console.log(\"Login success\");\r\n//       router.push('/dashboard'); // Redirect to dashboard after successful login\r\n//     } catch (error) {\r\n//       console.log(\"Login failed\", error);\r\n//     }\r\n//   };\r\n\r\n//   const switchForm = () => {\r\n//     setIsSignup(!isSignup);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <div className=\"left-side\"></div>\r\n//       <div className=\"right-side\">\r\n//         {isSignup ? (\r\n//           <GeneralForm\r\n//             fields={[\r\n//               { name: \"username\", label: \"Full Name\", type: \"text\", required: true },\r\n//               { name: \"email\", label: \"Email\", type: \"email\", required: true },\r\n//               { name: \"phoneNo\", label: \"Phone Number\", type: \"text\", required: true },\r\n//               { name: \"address\", label: \"Address\", type: \"text\", required: true },\r\n//               { name: \"password\", label: \"Password\", type: \"password\", required: true },\r\n//             ]}\r\n//             buttonText=\"Create Your Account\"\r\n//             onSubmit={onLogin}\r\n//             redirectPath=\"/login\"\r\n//             switchForm={switchForm}\r\n//           />\r\n//         ) : (\r\n//           <GeneralForm\r\n//             fields={[\r\n//               { name: \"email\", label: \"Email\", type: \"email\", required: true },\r\n//               { name: \"password\", label: \"Password\", type: \"password\", required: true },\r\n//             ]}\r\n//             buttonText=\"Login\"\r\n//             onSubmit={onLogin}\r\n//             redirectPath=\"/profile\"\r\n//             validationSchema={loginSchema} // Pass validation schema\r\n//             switchForm={switchForm}\r\n//           />\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // app/login/page.tsx\r\n// 'use client'\r\n// import React from \"react\";\r\n// import GeneralForm from \"@/components/forms/GeneralForm\";\r\n// import axios from \"axios\";\r\n// import router from \"next/router\";\r\n\r\n// const LoginPage = () => {\r\n\r\n  \r\n//   const onLogIn = async (user: { email: string; password: string }) => {\r\n//     try {\r\n      \r\n//       const response = await axios.post(\"/api/auth/login\", user);\r\n//       console.log(\"Login sucess\")\r\n//       router.push('/user/profile'); \r\n//     // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n//     } catch (error:any) {\r\n//       console.log(\"Login failed\", error.message);\r\n      \r\n  \r\n  \r\n//   }\r\n \r\n//   };\r\n\r\n\r\n//   return (\r\n//       <GeneralForm\r\n//       fields={[\r\n//         { name: \"email\", label: \"Email\", type: \"email\", required: true },\r\n//         { name: \"password\", label: \"Password\", type: \"password\", required: true },\r\n//       ]}\r\n//       buttonText=\"Login\"\r\n//       onSubmit={onLogIn}\r\n//       redirectPath=\"/user/profile\" // Redirect after successful login\r\n//     />\r\n    \r\n    \r\n    \r\n//   );\r\n// };\r\n\r\n// export default LoginPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// /* eslint-disable @typescript-eslint/no-unused-vars */\r\n// 'use client'\r\n// import { useEffect, useState } from \"react\";\r\n// import Link from \"next/link\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import axios from 'axios';\r\n// import React from \"react\";\r\n\r\n\r\n// const Login = () => {\r\n//   const [user, setUser] = useState({\r\n//     email: '',\r\n//    password: '',\r\n  \r\n//   });\r\n//   const [buttonDisabled,setButtonDisabled]=useState(true);\r\n//   const [loading,setLoading]=useState(false);\r\n//   const router = useRouter();\r\n//   useEffect(()=>{\r\n//     if(user.email.length>0 && user.password.length >0){\r\n//       setButtonDisabled(false)\r\n//     }else{\r\n//       setButtonDisabled(true)\r\n//     }\r\n//   },[user])\r\n\r\n\r\n//   const onLogIn = async () => {\r\n//     try {\r\n      \r\n//     } catch (error) {\r\n      \r\n//     }try {\r\n//       setLoading(true)\r\n//       setButtonDisabled(true)\r\n//       const response = await axios.post(\"/api/auth/login\", user);\r\n//       console.log(\"Login sucess\")\r\n//       router.push('/user/profile'); \r\n//     // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n//     } catch (error:any) {\r\n//       console.log(\"Login failed\", error.message);\r\n      \r\n  \r\n//   }finally {\r\n//     setTimeout(() => {\r\n//       setLoading(false);\r\n//       setButtonDisabled(false);\r\n//   }, 1000);\r\n//   }\r\n \r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n//       <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md\">\r\n//         <h2 className=\"text-2xl font-bold text-center text-gray-800\">\r\n//           Login to Your Account\r\n//         </h2>\r\n//         <form  className=\"space-y-6\">\r\n//           <div>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">\r\n//               Email\r\n//             </label>\r\n//             <input\r\n//             type=\"email\"\r\n//             value={user.email}\r\n//             onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n//             required\r\n//             className=\"w-full px-3 py-2 mt-1  text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//          />\r\n//           </div>\r\n//           <div>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">\r\n//               Password\r\n//             </label>\r\n//             <input\r\n//                type=\"password\"\r\n//                value={user.password}\r\n//                onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n//                required\r\n//                className=\"w-full px-3 py-2 mt-1 text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//               />\r\n//           </div>\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={onLogIn}\r\n//             disabled={buttonDisabled}\r\n//             className={`w-full px-4 py-2 font-semibold text-white rounded-md focus:outline-none focus:ring focus:ring-indigo-200 ${\r\n//                 buttonDisabled ? 'bg-gray-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'\r\n//             }`}\r\n//         >\r\n//             {loading ? 'Processing...' : 'Login'}\r\n//         </button>\r\n\r\n\r\n//         </form>\r\n//         <p className=\"text-sm text-center text-gray-600\">\r\n//           Don&apos;t have an account?{\" \"}\r\n//           <Link href=\"/signup\" className=\"text-indigo-600 hover:underline\">\r\n//            Sign Up\r\n//           </Link>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAeA,cAAc;AAdd,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAKzE,SAASE,IAAI,EAAEC,KAAK,GAAE;AAStB,iCAAiC;;;;;;;;AAEjC,OAAO,MAAMG,eAAe,6CAAA;IAC1BC,MAAAA,GAASC;IACTC,EAAAA,OAAAA;IAAAA,CAAWC;IAAAA;QACb,EAAC,UAAA;YAAA;YAAA;gBAED,YAAA;oBAAA,CAAc;oBAAA,6BAAoC;wBAElD,YAAA;4BAAA;4BAAA,CACA,kCAD4D;4BAC5D,IAAO,MAAMC,cAAc,IAAIX,mBAAmB;kCAChDY,QAAAA,CAAAA,CAAY;gCAAA,QAAA;oCAAA,IAAA;oCAAA;iCAAA;;+BACVC,MAAMZ,UAAUa,QAAQ;;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA;oBAAAA,CAAU;iBAAA;;iBACV,2CAA2C;sBAC3CC,IAAAA,CAAAA;YAAAA;SAAAA,CAAY;;SACZC,UAAU;cACVC,IAAAA;YAAAA,CAAU,EAAE,GAAA;gBACd,OAAA,QAAA;wBAAA;4BACAC,KAAAA,CAAAA,GAAAA,2KAAAA,CAAAA,CAAU,qBAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACRC,OAAAA,GAAAA,mSAAAA,CAAAA,EAAYnB,QAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EAAAA,mSAAAA,CAAAA,UAAAA,CAAAA,MAAAA,EAAAA;4BACd,MAAA,CAAA,YAAA,CAAA;wBACA;qBAAA","ignoreList":[0]}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}