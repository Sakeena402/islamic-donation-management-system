{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/islamic-donation-management-system/app/%28campaign%29/campaignCards/page.tsx"],"sourcesContent":["// 'use client';\r\n\r\n// import { useState, useEffect } from 'react';\r\n// import { motion } from 'framer-motion';\r\n// import CampaignCard from '@/components/CampaignCard'; // Make sure to import your CampaignCard component\r\n\r\n// const CampaignPage: React.FC = () => {\r\n//   const [campaigns, setCampaigns] = useState<any[]>([]);\r\n//   const [isLoading, setIsLoading] = useState<boolean>(true);\r\n//   const [error, setError] = useState<string | null>(null);\r\n\r\n//   // Fetch campaigns from the backend API\r\n//   useEffect(() => {\r\n//     // Make sure to replace '/api/campaigns' with your actual backend endpoint\r\n//     fetch('/api/campaign')\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setCampaigns(data);\r\n//         setIsLoading(false);\r\n//       }) \r\n//       .catch((err) => {\r\n//         setError('Failed to load campaigns');\r\n//         setIsLoading(false);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"mx-auto px-7 m-12 py-15\">\r\n//       {/* Section for Heading */}\r\n//       <motion.section\r\n//         className=\"text-center mb-10\"\r\n//         initial={{ opacity: 0, y: 40 }}\r\n//         whileInView={{ opacity: 1, y: 0 }}\r\n//         transition={{ duration: 1 }}\r\n//         viewport={{ once: false, amount: 0.2 }}\r\n//       >\r\n//         <h2 className=\"text-2xl pt-5 text-center font-bold font-serif mb-6 md:text-5xl\" style={{ textShadow: '2px 2px 4px rgba(0, 0, 0, 0.6)' }}>\r\n//           Hope in Healing: Donate to Save Them!\r\n//         </h2>\r\n//       </motion.section>\r\n\r\n//       {/* Loading State */}\r\n//       {isLoading ? (\r\n//         <div className=\"text-center text-lg text-gray-500\">Loading campaigns...</div>\r\n//       ) : error ? (\r\n//         <div className=\"text-center text-lg text-red-500\">{error}</div>\r\n//       ) : (\r\n//         <motion.section\r\n//           className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-10 gap-y-12\"\r\n//           initial={{ opacity: 0 }}\r\n//           whileInView={{ opacity: 1 }}\r\n//           transition={{ duration: 1 }}\r\n//           viewport={{ once: false, amount: 0.2 }}\r\n//         >\r\n//           {/* Render each campaign card */}\r\n//           {campaigns.map((campaign, index) => (\r\n//             <motion.div\r\n//               key={index}\r\n//               initial={{ opacity: 0, y: 40 }}\r\n//               whileInView={{ opacity: 1, y: 0 }}\r\n//               transition={{ duration: 0.8, delay: index * 0.2 }}\r\n//               viewport={{ once: false, amount: 0.2 }}\r\n//             >\r\n//               <CampaignCard campaign={campaign} />\r\n//             </motion.div>\r\n//           ))}\r\n//         </motion.section>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CampaignPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 'use client';\r\n\r\n// import { useState, useEffect } from 'react';\r\n// import { motion } from 'framer-motion';\r\n// import CampaignCard from '@/components/CampaignCard'; // Import CampaignCard component\r\n\r\n// const CampaignPage: React.FC = () => {\r\n//   const [campaigns, setCampaigns] = useState<any[]>([]);\r\n//   const [isLoading, setIsLoading] = useState<boolean>(true);\r\n//   const [error, setError] = useState<string | null>(null);\r\n\r\n//   // Fetch campaigns from the backend API\r\n//   useEffect(() => {\r\n//     fetch('/api/campaign')\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setCampaigns(data);\r\n//         setIsLoading(false);\r\n//       })\r\n//       .catch((err) => {\r\n//         setError('Failed to load campaigns');\r\n//         setIsLoading(false);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"mx-auto px-7 py-15 mt-29\">\r\n//       {/* Section for Heading */}\r\n//       <motion.section\r\n//         className=\"text-center mb-10\"\r\n//         initial={{ opacity: 0, y: 40 }}\r\n//         whileInView={{ opacity: 1, y: 0 }}\r\n//         transition={{ duration: 1 }}\r\n//         viewport={{ once: false, amount: 0.2 }}\r\n//       >\r\n//         <h2\r\n//           className=\"text-2xl font-bold text-center font-serif mb-6 md:text-5xl\"\r\n//           style={{ textShadow: '2px 2px 4px rgba(0, 0, 0, 0.6)' }}\r\n//         >\r\n//           Hope in Healing: Donate to Save Them!\r\n//         </h2>\r\n//       </motion.section>\r\n\r\n//       {/* Loading State */}\r\n//       {isLoading ? (\r\n//         <div className=\"text-center text-lg text-gray-500\">Loading campaigns...</div>\r\n//       ) : error ? (\r\n//         <div className=\"text-center text-lg text-red-500\">{error}</div>\r\n//       ) : (\r\n//         <motion.section\r\n//           className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-10 gap-y-12\"\r\n//           initial={{ opacity: 0 }}\r\n//           whileInView={{ opacity: 1 }}\r\n//           transition={{ duration: 1 }}\r\n//           viewport={{ once: false, amount: 0.2 }}\r\n//         >\r\n//           {/* Render each campaign card */}\r\n//           {campaigns.map((campaign, index) => (\r\n//             <motion.div\r\n//               key={index}\r\n//               initial={{ opacity: 0, y: 40 }}\r\n//               whileInView={{ opacity: 1, y: 0 }}\r\n//               transition={{ duration: 0.8, delay: index * 0.2 }}\r\n//               viewport={{ once: false, amount: 0.2 }}\r\n//             >\r\n//               <CampaignCard campaign={campaign} />\r\n//             </motion.div>\r\n//           ))}\r\n//         </motion.section>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CampaignPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport CampaignCard from '@/components/CampaignCard';\r\n\r\ninterface Campaign {\r\n  _id: string;\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n  targetAmount: number;\r\n  startDate: string;\r\n  endDate: string;\r\n  isApproved: boolean;\r\n  isActive: boolean;\r\n  createdBy: { username?: string; email?: string } | null; // Make createdBy optional or null\r\n}\r\n\r\nconst CampaignPage: React.FC = () => {\r\n  const [campaigns, setCampaigns] = useState<Campaign[]>([]);\r\n  const [category, setCategory] = useState<string>(''); // For filtering campaigns\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Fetch campaigns with or without category filter\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const fetchCampaigns = async () => {\r\n      try {\r\n        const response = await fetch(`/api/campaign?category=${category}`);\r\n        const data = await response.json();\r\n        setCampaigns(data.data || []);\r\n      } catch (error) {\r\n        setError('Failed to load campaigns');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCampaigns();\r\n  }, [category]);\r\n\r\n  return (\r\n    <div className=\"mx-auto px-7 py-15 mt-29\">\r\n      {/* Section for Heading */}\r\n      <motion.section\r\n        className=\"text-center mb-10\"\r\n        initial={{ opacity: 0, y: 40 }}\r\n        whileInView={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 1 }}\r\n        viewport={{ once: false, amount: 0.2 }}\r\n      >\r\n        <h2\r\n          className=\"text-2xl font-bold text-center font-serif mb-6 md:text-5xl\"\r\n          style={{ textShadow: '2px 2px 4px rgba(0, 0, 0, 0.6)' }}\r\n        >\r\n          Hope in Healing: Donate to Save Them!\r\n        </h2>\r\n      </motion.section>\r\n\r\n      {/* Filter Dropdown */}\r\n      <div className=\"mb-6 flex justify-center\">\r\n        <select\r\n          onChange={(e) => setCategory(e.target.value)}\r\n          value={category}\r\n          className=\"p-3 border rounded-md shadow-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        >\r\n          <option value=\"\">All Categories</option>\r\n          <option value=\"Health\">Health</option>\r\n          <option value=\"Education\">Education</option>\r\n          <option value=\"Environment\">Environment</option>\r\n          {/* Add more categories as required */}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Loading State */}\r\n      {loading ? (\r\n        <div className=\"text-center text-lg text-gray-500\">Loading campaigns...</div>\r\n      ) : error ? (\r\n        <div className=\"text-center text-lg text-red-500\">{error}</div>\r\n      ) : (\r\n        <motion.section\r\n          className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-10 gap-y-12\"\r\n          initial={{ opacity: 0 }}\r\n          whileInView={{ opacity: 1 }}\r\n          transition={{ duration: 1 }}\r\n          viewport={{ once: false, amount: 0.2 }}\r\n        >\r\n          {/* Render each campaign card */}\r\n          {campaigns.length > 0 ? (\r\n            campaigns.map((campaign, index) => (\r\n              <motion.div\r\n                key={index}\r\n                initial={{ opacity: 0, y: 40 }}\r\n                whileInView={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.8, delay: index * 0.2 }}\r\n                viewport={{ once: false, amount: 0.2 }}\r\n              >\r\n                <CampaignCard\r\n                  campaign={{\r\n                    ...campaign,\r\n                    createdBy: campaign.createdBy?.username || 'Unknown', // Fallback to 'Unknown' if username is missing\r\n                  }}\r\n                />\r\n              </motion.div>\r\n            ))\r\n          ) : (\r\n            <div className=\"text-center text-lg text-gray-500\">No campaigns available.</div>\r\n          )}\r\n        </motion.section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CampaignPage;\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB,+CAA+C;AAC/C,0CAA0C;AAC1C,2GAA2G;AAE3G,yCAAyC;AACzC,2DAA2D;AAC3D,+DAA+D;AAC/D,6DAA6D;AAE7D,4CAA4C;AAC5C,sBAAsB;AACtB,iFAAiF;AACjF,6BAA6B;AAC7B,6CAA6C;AAC7C,0BAA0B;AAC1B,8BAA8B;AAC9B,+BAA+B;AAC/B,YAAY;AACZ,0BAA0B;AAC1B,gDAAgD;AAChD,+BAA+B;AAC/B,YAAY;AACZ,YAAY;AAEZ,aAAa;AACb,gDAAgD;AAChD,oCAAoC;AACpC,wBAAwB;AACxB,wCAAwC;AACxC,0CAA0C;AAC1C,6CAA6C;AAC7C,uCAAuC;AACvC,kDAAkD;AAClD,UAAU;AACV,oJAAoJ;AACpJ,kDAAkD;AAClD,gBAAgB;AAChB,0BAA0B;AAE1B,8BAA8B;AAC9B,uBAAuB;AACvB,wFAAwF;AACxF,sBAAsB;AACtB,0EAA0E;AAC1E,cAAc;AACd,0BAA0B;AAC1B,uFAAuF;AACvF,qCAAqC;AACrC,yCAAyC;AACzC,yCAAyC;AACzC,oDAAoD;AACpD,YAAY;AACZ,8CAA8C;AAC9C,kDAAkD;AAClD,0BAA0B;AAC1B,4BAA4B;AAC5B,gDAAgD;AAChD,mDAAmD;AACnD,mEAAmE;AACnE,wDAAwD;AACxD,gBAAgB;AAChB,qDAAqD;AACrD,4BAA4B;AAC5B,gBAAgB;AAChB,4BAA4B;AAC5B,WAAW;AACX,aAAa;AACb,OAAO;AACP,KAAK;AAEL,+BAA+B;AAO/B,gBAAgB;AAEhB,+CAA+C;AAC/C,0CAA0C;AAC1C,yFAAyF;AAEzF,yCAAyC;AACzC,2DAA2D;AAC3D,+DAA+D;AAC/D,6DAA6D;AAE7D,4CAA4C;AAC5C,sBAAsB;AACtB,6BAA6B;AAC7B,6CAA6C;AAC7C,0BAA0B;AAC1B,8BAA8B;AAC9B,+BAA+B;AAC/B,WAAW;AACX,0BAA0B;AAC1B,gDAAgD;AAChD,+BAA+B;AAC/B,YAAY;AACZ,YAAY;AAEZ,aAAa;AACb,iDAAiD;AACjD,oCAAoC;AACpC,wBAAwB;AACxB,wCAAwC;AACxC,0CAA0C;AAC1C,6CAA6C;AAC7C,uCAAuC;AACvC,kDAAkD;AAClD,UAAU;AACV,cAAc;AACd,mFAAmF;AACnF,qEAAqE;AACrE,YAAY;AACZ,kDAAkD;AAClD,gBAAgB;AAChB,0BAA0B;AAE1B,8BAA8B;AAC9B,uBAAuB;AACvB,wFAAwF;AACxF,sBAAsB;AACtB,0EAA0E;AAC1E,cAAc;AACd,0BAA0B;AAC1B,uFAAuF;AACvF,qCAAqC;AACrC,yCAAyC;AACzC,yCAAyC;AACzC,oDAAoD;AACpD,YAAY;AACZ,8CAA8C;AAC9C,kDAAkD;AAClD,0BAA0B;AAC1B,4BAA4B;AAC5B,gDAAgD;AAChD,mDAAmD;AACnD,mEAAmE;AACnE,wDAAwD;AACxD,gBAAgB;AAChB,qDAAqD;AACrD,4BAA4B;AAC5B,gBAAgB;AAChB,4BAA4B;AAC5B,WAAW;AACX,aAAa;AACb,OAAO;AACP,KAAK;AAEL,+BAA+B;;;;;AAY/B;AAEA;AADA;AAHA;;;;;AAmBA,MAAM,eAAyB;IAC7B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,KAAK,0BAA0B;IAChF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,kDAAkD;IAClD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;QACX,MAAM,iBAAiB;YACrB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,CAAC,uBAAuB,EAAE,UAAU;gBACjE,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,aAAa,KAAK,IAAI,IAAI,EAAE;YAC9B,EAAE,OAAO,OAAO;gBACd,SAAS;YACX,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;KAAS;IAEb,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,0LAAA,CAAA,SAAM,CAAC,OAAO;gBACb,WAAU;gBACV,SAAS;oBAAE,SAAS;oBAAG,GAAG;gBAAG;gBAC7B,aAAa;oBAAE,SAAS;oBAAG,GAAG;gBAAE;gBAChC,YAAY;oBAAE,UAAU;gBAAE;gBAC1B,UAAU;oBAAE,MAAM;oBAAO,QAAQ;gBAAI;0BAErC,cAAA,8OAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,YAAY;oBAAiC;8BACvD;;;;;;;;;;;0BAMH,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oBAC3C,OAAO;oBACP,WAAU;;sCAEV,8OAAC;4BAAO,OAAM;sCAAG;;;;;;sCACjB,8OAAC;4BAAO,OAAM;sCAAS;;;;;;sCACvB,8OAAC;4BAAO,OAAM;sCAAY;;;;;;sCAC1B,8OAAC;4BAAO,OAAM;sCAAc;;;;;;;;;;;;;;;;;YAM/B,wBACC,8OAAC;gBAAI,WAAU;0BAAoC;;;;;uBACjD,sBACF,8OAAC;gBAAI,WAAU;0BAAoC;;;;;qCAEnD,8OAAC,0LAAA,CAAA,SAAM,CAAC,OAAO;gBACb,WAAU;gBACV,SAAS;oBAAE,SAAS;gBAAE;gBACtB,aAAa;oBAAE,SAAS;gBAAE;gBAC1B,YAAY;oBAAE,UAAU;gBAAE;gBAC1B,UAAU;oBAAE,MAAM;oBAAO,QAAQ;gBAAI;0BAGpC,UAAU,MAAM,GAAG,IAClB,UAAU,GAAG,CAAC,CAAC,UAAU,sBACvB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;wBAET,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,aAAa;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAChC,YAAY;4BAAE,UAAU;4BAAK,OAAO,QAAQ;wBAAI;wBAChD,UAAU;4BAAE,MAAM;4BAAO,QAAQ;wBAAI;kCAErC,cAAA,8OAAC,2HAAA,CAAA,UAAY;4BACX,UAAU;gCACR,GAAG,QAAQ;gCACX,WAAW,SAAS,SAAS,EAAE,YAAY;4BAC7C;;;;;;uBAVG;;;;8CAeT,8OAAC;oBAAI,WAAU;8BAAoC;;;;;;;;;;;;;;;;;AAM/D;uCAEe"}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}