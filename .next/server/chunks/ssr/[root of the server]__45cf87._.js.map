{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/forms/GeneralForm.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/forms/GeneralForm.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/forms/GeneralForm.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/forms/GeneralForm.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/forms/GeneralForm.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/forms/GeneralForm.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/AuthLayout.tsx"],"sourcesContent":["// AuthLayout.tsx\r\nimport React from 'react';\r\n\r\nconst AuthLayout: React.FC<{ children: React.ReactNode; backgroundImage: string }> = ({ children, backgroundImage }) => {\r\n  return (\r\n    <div className=\"flex min-h-screen\">\r\n      <div\r\n        className=\"w-2/3 bg-cover bg-center\"\r\n        style={{ backgroundImage: `url(${backgroundImage})` }}\r\n      ></div>\r\n      <div className=\"w-1/2 flex items-center justify-center bg-gray-50\">\r\n      \r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthLayout;\r\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;;AAGjB,MAAM,aAA+E,CAAC,EAAE,QAAQ,EAAE,eAAe,EAAE;IACjH,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,WAAU;gBACV,OAAO;oBAAE,iBAAiB,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;gBAAC;;;;;;0BAEtD,8OAAC;gBAAI,WAAU;0BAEZ;;;;;;;;;;;;AAIT;uCAEe"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/schemas/validationSchema.ts"],"sourcesContent":["// /schemas/validationSchema.ts\r\nimport * as yup from \"yup\";\r\n\r\nexport const signupSchema = yup.object({\r\n  username: yup.string().min(3, \"Username must be at least 3 characters\").required(\"Username is required\"),\r\n  email: yup.string().email(\"Enter a valid email\").required(\"Email is required\"),\r\n  phoneNo: yup.string().matches(/^\\d{10,15}$/, \"Enter a valid phone number\").required(\"Phone number is required\"),\r\n  address: yup.string().min(5, \"Address must be at least 5 characters\").required(\"Address is required\"),\r\n  password: yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\r\n});\r\n\r\nexport const loginSchema = yup.object({\r\n  email: yup.string().email(\"Enter a valid email\").required(\"Email is required\"),\r\n  password: yup.string().required(\"Password is required\"),\r\n});\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAC/B;;AAEO,MAAM,eAAe,oIAAI,MAAM,CAAC;IACrC,UAAU,oIAAI,MAAM,GAAG,GAAG,CAAC,GAAG,0CAA0C,QAAQ,CAAC;IACjF,OAAO,oIAAI,MAAM,GAAG,KAAK,CAAC,uBAAuB,QAAQ,CAAC;IAC1D,SAAS,oIAAI,MAAM,GAAG,OAAO,CAAC,eAAe,8BAA8B,QAAQ,CAAC;IACpF,SAAS,oIAAI,MAAM,GAAG,GAAG,CAAC,GAAG,yCAAyC,QAAQ,CAAC;IAC/E,UAAU,oIAAI,MAAM,GAAG,GAAG,CAAC,GAAG,0CAA0C,QAAQ,CAAC;AACnF;AAEO,MAAM,cAAc,oIAAI,MAAM,CAAC;IACpC,OAAO,oIAAI,MAAM,GAAG,KAAK,CAAC,uBAAuB,QAAQ,CAAC;IAC1D,UAAU,oIAAI,MAAM,GAAG,QAAQ,CAAC;AAClC"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(auth-pages)/signup/page.tsx"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // SignupPage.tsx\r\n// 'use client'\r\n// import React from \"react\";\r\n// import GeneralForm from \"@/components/forms/GeneralForm\";\r\n// import axios from \"axios\";\r\n// import router from \"next/router\";\r\n// import AuthLayout from \"@/components/AuthLayout\"; // Import the layout\r\n\r\n// const SignupPage = () => {\r\n//   const onSignUp = async (user: { username: string; email: string; phoneNo: string; address: string; password: string }) => {\r\n//     try {\r\n//       const response = await axios.post(\"/api/auth/signup\", user);\r\n//       console.log(\"Signup successful\");\r\n//       router.push('/login'); // Redirect to login page\r\n//     } catch (error: any) {\r\n//       console.log(\"Signup failed\", error.message);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <AuthLayout backgroundImage=\"https://wallpapers.com/images/hd/1920-x-1080-hd-c65hirjqswhsd1z3.jpg\"> {/* Add your background image path */}\r\n//       <GeneralForm\r\n//         fields={[\r\n//           { name: \"username\", label: \"Full Name\", type: \"text\", required: true },\r\n//           { name: \"email\", label: \"Email\", type: \"email\", required: true },\r\n//           { name: \"phoneNo\", label: \"Phone Number\", type: \"text\", required: true },\r\n//           { name: \"address\", label: \"Address\", type: \"text\", required: true },\r\n//           { name: \"password\", label: \"Password\", type: \"password\", required: true },\r\n//         ]}\r\n//         buttonText=\"Create Your Account\"\r\n//         onSubmit={onSignUp}\r\n//         redirectPath=\"/login\" // Redirect after successful signup\r\n//       />\r\n//     </AuthLayout>\r\n//   );\r\n// };\r\n\r\n// export default SignupPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 'use client'\r\n\r\n// import React from \"react\";\r\n// import GeneralForm from \"@/components/forms/GeneralForm\";\r\n// import axios from \"axios\";\r\n// import router from \"next/router\";\r\n\r\n\r\n\r\n// const SignupPage = () => {\r\n  \r\n//   const onSignUp = async (user: { username: string; email: string; phoneNo: string; address: string; password: string }) => {\r\n\r\n//     try {\r\n    \r\n//       const response = await axios.post(\"/api/auth/signup\", user);\r\n//       console.log(\"Signup sucess\")\r\n//       router.push('/login'); \r\n//     } catch (error:any) {\r\n//       console.log(\"Signup failed\", error.message);\r\n      \r\n  \r\n//   }\r\n \r\n\r\n//   };\r\n\r\n  \r\n//   return (\r\n//     <GeneralForm\r\n//       fields={[\r\n//         { name: \"username\", label: \"Full Name\", type: \"text\", required: true },\r\n//         { name: \"email\", label: \"Email\", type: \"email\", required: true },\r\n//         { name: \"phoneNo\", label: \"Phone Number\", type: \"text\", required: true },\r\n//         { name: \"address\", label: \"Address\", type: \"text\", required: true },\r\n//         { name: \"password\", label: \"Password\", type: \"password\", required: true },\r\n//       ]}\r\n//       buttonText=\"Create Your Account\"\r\n//       onSubmit={onSignUp}\r\n//       redirectPath=\"/login\" // Redirect after successful signup\r\n//     />\r\n//   );\r\n// };\r\n\r\n// export default SignupPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// /* eslint-disable @typescript-eslint/no-unused-vars */\r\n// 'use client'\r\n// import { useState,useEffect } from \"react\";\r\n// import Link from \"next/link\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import axios from 'axios';\r\n// import React from \"react\";\r\n\r\n// const SignUp = () => {\r\n//   const [user, setUser] = useState({\r\n//     username: '',\r\n//     email: '',\r\n//     phoneNo: '',\r\n//     address: '',\r\n//     password: '',\r\n \r\n//   });\r\n// const [buttonDisabled,setButtonDisabled]  = useState(false)\r\n// const [loading,setLoading]=useState(false)\r\n// const router = useRouter();\r\n\r\n// useEffect(() => {\r\n//   if(user.email.length > 0 && user.password.length > 0 && user.username.length > 0) {\r\n//       setButtonDisabled(false);\r\n//   } else {\r\n//       setButtonDisabled(true);\r\n//   }\r\n// }, [user]);\r\n\r\n//   const onSignUp = async () => {\r\n\r\n//     try {\r\n//       setLoading(true)\r\n//       setButtonDisabled(true)\r\n//       const response = await axios.post(\"/api/auth/signup\", user);\r\n//       console.log(\"Signup sucess\")\r\n//       router.push('/login'); \r\n//     } catch (error:any) {\r\n//       console.log(\"Signup failed\", error.message);\r\n      \r\n  \r\n//   }finally {\r\n//     setTimeout(() => {\r\n//       setLoading(false);\r\n//       setButtonDisabled(false);\r\n//   }, 1000);\r\n//   }\r\n \r\n\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n//       <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md\">\r\n//         <h2 className=\"text-2xl font-bold text-center text-gray-800\">\r\n//           Create Your Account\r\n//         </h2>\r\n//         <form className=\"space-y-6\">\r\n//           <div>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">\r\n//               Full Name\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={user.username}\r\n//               onChange={(e) => setUser({ ...user, username: e.target.value })}\r\n//               required\r\n//               className=\"w-full px-3 py-2 mt-1 border text-gray-700 rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">\r\n//               Email\r\n//             </label>\r\n//             <input\r\n//               type=\"email\"\r\n//               value={user.email}\r\n//               onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n//               required\r\n//               className=\"w-full px-3 py-2 mt-1  text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">\r\n//               Phone Number\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={user.phoneNo}\r\n//               onChange={(e) => setUser({ ...user, phoneNo: e.target.value })}\r\n//               required\r\n//               className=\"w-full px-3 py-2 mt-1 text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">\r\n//               Address\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={user.address}\r\n//               onChange={(e) => setUser({ ...user, address: e.target.value })}\r\n//               required\r\n//               className=\"w-full px-3 py-2 mt-1 text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">\r\n//               Password\r\n//             </label>\r\n//             <input\r\n//               type=\"password\"\r\n//               value={user.password}\r\n//               onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n//               required\r\n//               className=\"w-full px-3 py-2 mt-1 text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//             />\r\n//           </div>\r\n         \r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={onSignUp}\r\n//             disabled={buttonDisabled}\r\n//             className={`w-full px-4 py-2 font-semibold text-white rounded-md focus:outline-none focus:ring focus:ring-indigo-200 ${\r\n//                 buttonDisabled ? 'bg-gray-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'\r\n//             }`}\r\n//         >\r\n//             {loading ? 'Processing...' : 'Sign Up'}\r\n//         </button>\r\n\r\n//         </form>\r\n//         <p className=\"text-sm text-center text-gray-600\">\r\n//           Already have an account?{\" \"}\r\n//           <Link href=\"/login\" className=\"text-indigo-600 hover:underline\">\r\n//            Login\r\n//           </Link>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SignUp;\r\n// app/signup/page.tsx// app/signup/page.tsx"],"names":[],"mappings":"AAoCA,oBAAoB;AACpB,eAAe;AACf,6BAA6B;AAC7B,4DAA4D;AAC5D,6BAA6B;AAC7B,oCAAoC;AACpC,yEAAyE;AAEzE,6BAA6B;AAC7B,gIAAgI;AAChI,YAAY;AACZ,qEAAqE;AACrE,0CAA0C;AAC1C,yDAAyD;AACzD,6BAA6B;AAC7B,qDAAqD;AACrD,QAAQ;AACR,OAAO;AAEP,aAAa;AACb,iJAAiJ;AACjJ,qBAAqB;AACrB,oBAAoB;AACpB,oFAAoF;AACpF,8EAA8E;AAC9E,sFAAsF;AACtF,iFAAiF;AACjF,uFAAuF;AACvF,aAAa;AACb,2CAA2C;AAC3C,8BAA8B;AAC9B,oEAAoE;AACpE,WAAW;AACX,oBAAoB;AACpB,OAAO;AACP,KAAK;AAEL,6BAA6B;AAgB7B,eAAe;AAEf,6BAA6B;AAC7B,4DAA4D;AAC5D,6BAA6B;AAC7B,oCAAoC;AAIpC,6BAA6B;AAE7B,gIAAgI;AAEhI,YAAY;AAEZ,qEAAqE;AACrE,qCAAqC;AACrC,gCAAgC;AAChC,4BAA4B;AAC5B,qDAAqD;AAGrD,MAAM;AAGN,OAAO;AAGP,aAAa;AACb,mBAAmB;AACnB,kBAAkB;AAClB,kFAAkF;AAClF,4EAA4E;AAC5E,oFAAoF;AACpF,+EAA+E;AAC/E,qFAAqF;AACrF,WAAW;AACX,yCAAyC;AACzC,4BAA4B;AAC5B,kEAAkE;AAClE,SAAS;AACT,OAAO;AACP,KAAK;AAEL,6BAA6B;AA2B7B,yDAAyD;AACzD,eAAe;AACf,8CAA8C;AAC9C,gCAAgC;AAChC,+CAA+C;AAC/C,6BAA6B;AAC7B,6BAA6B;AAE7B,yBAAyB;AACzB,uCAAuC;AACvC,oBAAoB;AACpB,iBAAiB;AACjB,mBAAmB;AACnB,mBAAmB;AACnB,oBAAoB;AAEpB,QAAQ;AACR,8DAA8D;AAC9D,6CAA6C;AAC7C,8BAA8B;AAE9B,oBAAoB;AACpB,wFAAwF;AACxF,kCAAkC;AAClC,aAAa;AACb,iCAAiC;AACjC,MAAM;AACN,cAAc;AAEd,mCAAmC;AAEnC,YAAY;AACZ,yBAAyB;AACzB,gCAAgC;AAChC,qEAAqE;AACrE,qCAAqC;AACrC,gCAAgC;AAChC,4BAA4B;AAC5B,qDAAqD;AAGrD,eAAe;AACf,yBAAyB;AACzB,2BAA2B;AAC3B,kCAAkC;AAClC,cAAc;AACd,MAAM;AAGN,OAAO;AAEP,aAAa;AACb,kFAAkF;AAClF,sFAAsF;AACtF,wEAAwE;AACxE,gCAAgC;AAChC,gBAAgB;AAChB,uCAAuC;AACvC,kBAAkB;AAClB,0EAA0E;AAC1E,0BAA0B;AAC1B,uBAAuB;AACvB,qBAAqB;AACrB,4BAA4B;AAC5B,sCAAsC;AACtC,iFAAiF;AACjF,yBAAyB;AACzB,8JAA8J;AAC9J,iBAAiB;AACjB,mBAAmB;AACnB,kBAAkB;AAClB,0EAA0E;AAC1E,sBAAsB;AACtB,uBAAuB;AACvB,qBAAqB;AACrB,6BAA6B;AAC7B,mCAAmC;AACnC,8EAA8E;AAC9E,yBAAyB;AACzB,+JAA+J;AAC/J,iBAAiB;AACjB,mBAAmB;AACnB,kBAAkB;AAClB,0EAA0E;AAC1E,6BAA6B;AAC7B,uBAAuB;AACvB,qBAAqB;AACrB,4BAA4B;AAC5B,qCAAqC;AACrC,gFAAgF;AAChF,yBAAyB;AACzB,8JAA8J;AAC9J,iBAAiB;AACjB,mBAAmB;AACnB,kBAAkB;AAClB,0EAA0E;AAC1E,wBAAwB;AACxB,uBAAuB;AACvB,qBAAqB;AACrB,4BAA4B;AAC5B,qCAAqC;AACrC,gFAAgF;AAChF,yBAAyB;AACzB,8JAA8J;AAC9J,iBAAiB;AACjB,mBAAmB;AACnB,kBAAkB;AAClB,0EAA0E;AAC1E,yBAAyB;AACzB,uBAAuB;AACvB,qBAAqB;AACrB,gCAAgC;AAChC,sCAAsC;AACtC,iFAAiF;AACjF,yBAAyB;AACzB,8JAA8J;AAC9J,iBAAiB;AACjB,mBAAmB;AAEnB,oBAAoB;AACpB,4BAA4B;AAC5B,iCAAiC;AACjC,wCAAwC;AACxC,sIAAsI;AACtI,0GAA0G;AAC1G,kBAAkB;AAClB,YAAY;AACZ,sDAAsD;AACtD,oBAAoB;AAEpB,kBAAkB;AAClB,4DAA4D;AAC5D,0CAA0C;AAC1C,6EAA6E;AAC7E,mBAAmB;AACnB,oBAAoB;AACpB,eAAe;AACf,eAAe;AACf,aAAa;AACb,OAAO;AACP,KAAK;AAEL,yBAAyB;AACzB,4CAA4C"}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}