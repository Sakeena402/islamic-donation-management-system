{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(auth-pages)/login/page.tsx"],"sourcesContent":["'use client';\r\nimport React, { useState } from \"react\";\r\nimport GeneralForm from \"@/components/forms/GeneralForm\";\r\nimport axios from \"axios\";\r\nimport AuthLayout from \"@/components/AuthLayout\";\r\nimport { loginSchema } from \"@/schemas/validationSchema\";\r\nimport { useRouter } from 'next/navigation';\r\n\r\nconst LoginPage = () => {\r\n  const [loginError, setLoginError] = useState<string | null>(null);\r\n  const router = useRouter();\r\n\r\n  const onLogin = async (credentials: { email: string; password: string }) => {\r\n    try {\r\n      const response = await axios.post(\"/api/auth/login\", credentials);\r\n      console.log(\"Login successful\");\r\n      // Redirect user after successful login\r\n      router.push(\"/dashboard\"); // or the appropriate route\r\n    } catch (error: any) {\r\n      // Handle different types of errors\r\n      if (error.response) {\r\n        // Server responded with a status code\r\n        switch (error.response.status) {\r\n          case 400:\r\n            // Check if the specific error is due to email or password issues\r\n            if (error.response.data.error === \"Email and password are required\") {\r\n              setLoginError(\"Please enter both email and password.\");\r\n            } else if (error.response.data.error === \"User doesn't exist\") {\r\n              setLoginError(\"No account found with this email. Please sign up.\");\r\n            } else if (error.response.data.error === \"Invalid password\") {\r\n              setLoginError(\"The password you entered is incorrect. Please try again.\");\r\n            } else {\r\n              setLoginError(\"An error occurred. Please try again.\");\r\n            }\r\n            break;\r\n          case 500:\r\n            setLoginError(\"Server error. Please try again later.\");\r\n            break;\r\n          default:\r\n            setLoginError(\"An unexpected error occurred. Please try again.\");\r\n        }\r\n      } else if (error.request) {\r\n        // Request was made but no response received\r\n        setLoginError(\"No response from the server. Please check your connection.\");\r\n      } else {\r\n        // Something else happened in making the request\r\n        setLoginError(\"An error occurred while logging in. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthLayout backgroundImage=\"https://wallpapers.com/images/hd/1920-x-1080-hd-c65hirjqswhsd1z3.jpg\">\r\n      <GeneralForm\r\n        fields={[\r\n          { name: \"email\", label: \"Email\", type: \"email\", required: true },\r\n          { name: \"password\", label: \"Password\", type: \"password\", required: true },\r\n        ]}\r\n        buttonText=\"Login\"\r\n        onSubmit={onLogin}\r\n        validationSchema={loginSchema}\r\n        errorMessage={loginError}\r\n      />\r\n    </AuthLayout>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // app/login/page.tsx\r\n// 'use client'\r\n// import React from \"react\";\r\n// import GeneralForm from \"@/components/forms/GeneralForm\";\r\n// import axios from \"axios\";\r\n// import router from \"next/router\";\r\n\r\n// const LoginPage = () => {\r\n\r\n  \r\n//   const onLogIn = async (user: { email: string; password: string }) => {\r\n//     try {\r\n      \r\n//       const response = await axios.post(\"/api/auth/login\", user);\r\n//       console.log(\"Login sucess\")\r\n//       router.push('/user/profile'); \r\n//     // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n//     } catch (error:any) {\r\n//       console.log(\"Login failed\", error.message);\r\n      \r\n  \r\n  \r\n//   }\r\n \r\n//   };\r\n\r\n\r\n//   return (\r\n//       <GeneralForm\r\n//       fields={[\r\n//         { name: \"email\", label: \"Email\", type: \"email\", required: true },\r\n//         { name: \"password\", label: \"Password\", type: \"password\", required: true },\r\n//       ]}\r\n//       buttonText=\"Login\"\r\n//       onSubmit={onLogIn}\r\n//       redirectPath=\"/user/profile\" // Redirect after successful login\r\n//     />\r\n    \r\n    \r\n    \r\n//   );\r\n// };\r\n\r\n// export default LoginPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// /* eslint-disable @typescript-eslint/no-unused-vars */\r\n// 'use client'\r\n// import { useEffect, useState } from \"react\";\r\n// import Link from \"next/link\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import axios from 'axios';\r\n// import React from \"react\";\r\n\r\n\r\n// const Login = () => {\r\n//   const [user, setUser] = useState({\r\n//     email: '',\r\n//    password: '',\r\n  \r\n//   });\r\n//   const [buttonDisabled,setButtonDisabled]=useState(true);\r\n//   const [loading,setLoading]=useState(false);\r\n//   const router = useRouter();\r\n//   useEffect(()=>{\r\n//     if(user.email.length>0 && user.password.length >0){\r\n//       setButtonDisabled(false)\r\n//     }else{\r\n//       setButtonDisabled(true)\r\n//     }\r\n//   },[user])\r\n\r\n\r\n//   const onLogIn = async () => {\r\n//     try {\r\n      \r\n//     } catch (error) {\r\n      \r\n//     }try {\r\n//       setLoading(true)\r\n//       setButtonDisabled(true)\r\n//       const response = await axios.post(\"/api/auth/login\", user);\r\n//       console.log(\"Login sucess\")\r\n//       router.push('/user/profile'); \r\n//     // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n//     } catch (error:any) {\r\n//       console.log(\"Login failed\", error.message);\r\n      \r\n  \r\n//   }finally {\r\n//     setTimeout(() => {\r\n//       setLoading(false);\r\n//       setButtonDisabled(false);\r\n//   }, 1000);\r\n//   }\r\n \r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n//       <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md\">\r\n//         <h2 className=\"text-2xl font-bold text-center text-gray-800\">\r\n//           Login to Your Account\r\n//         </h2>\r\n//         <form  className=\"space-y-6\">\r\n//           <div>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">\r\n//               Email\r\n//             </label>\r\n//             <input\r\n//             type=\"email\"\r\n//             value={user.email}\r\n//             onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n//             required\r\n//             className=\"w-full px-3 py-2 mt-1  text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//          />\r\n//           </div>\r\n//           <div>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">\r\n//               Password\r\n//             </label>\r\n//             <input\r\n//                type=\"password\"\r\n//                value={user.password}\r\n//                onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n//                required\r\n//                className=\"w-full px-3 py-2 mt-1 text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//               />\r\n//           </div>\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={onLogIn}\r\n//             disabled={buttonDisabled}\r\n//             className={`w-full px-4 py-2 font-semibold text-white rounded-md focus:outline-none focus:ring focus:ring-indigo-200 ${\r\n//                 buttonDisabled ? 'bg-gray-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'\r\n//             }`}\r\n//         >\r\n//             {loading ? 'Processing...' : 'Login'}\r\n//         </button>\r\n\r\n\r\n//         </form>\r\n//         <p className=\"text-sm text-center text-gray-600\">\r\n//           Don&apos;t have an account?{\" \"}\r\n//           <Link href=\"/signup\" className=\"text-indigo-600 hover:underline\">\r\n//            Sign Up\r\n//           </Link>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}