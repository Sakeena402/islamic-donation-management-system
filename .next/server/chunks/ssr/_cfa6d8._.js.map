{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://E%3A/islamic-donation-management-system/app/donation/page.tsx"],"sourcesContent":["// import { NextApiRequest, NextApiResponse } from 'next';\r\n// import Stripe from 'stripe';\r\n// import { PrismaClient } from '@prisma/client'; // Assuming you are using Prisma\r\n\r\n// const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, { apiVersion: '2022-11-15' });\r\n// const prisma = new PrismaClient();\r\n\r\n// export default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n//   if (req.method === 'POST') {\r\n//     const { amount, type, paymentMethod, userID } = req.body;\r\n\r\n//     try {\r\n//       // Create Stripe payment intent\r\n//       const paymentIntent = await stripe.paymentIntents.create({\r\n//         amount: amount * 100, // Convert amount to cents\r\n//         currency: 'usd',\r\n//         payment_method_types: ['card'],\r\n//       });\r\n\r\n//       // Save donation in the database\r\n//       const donation = await prisma.donation.create({\r\n//         data: {\r\n//           Amount: amount,\r\n//           Type: type,\r\n//           PaymentMethod: paymentMethod,\r\n//           Date: Math.floor(Date.now() / 1000),\r\n//           UserID: userID,\r\n//           PaymentStatus: 'Pending',\r\n//         },\r\n//       });\r\n\r\n//       res.status(200).json({ success: true, clientSecret: paymentIntent.client_secret, donation });\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       res.status(500).json({ error: 'Internal server error' });\r\n//     }\r\n//   } else {\r\n//     res.setHeader('Allow', ['POST']);\r\n//     res.status(405).end(`Method ${req.method} Not Allowed`);\r\n//   }\r\n// }\r\n"],"names":[],"mappings":"AAAA,0DAA0D;AAC1D,+BAA+B;AAC/B,kFAAkF;AAElF,2FAA2F;AAC3F,qCAAqC;AAErC,qFAAqF;AACrF,iCAAiC;AACjC,gEAAgE;AAEhE,YAAY;AACZ,wCAAwC;AACxC,mEAAmE;AACnE,2DAA2D;AAC3D,2BAA2B;AAC3B,0CAA0C;AAC1C,YAAY;AAEZ,yCAAyC;AACzC,wDAAwD;AACxD,kBAAkB;AAClB,4BAA4B;AAC5B,wBAAwB;AACxB,0CAA0C;AAC1C,iDAAiD;AACjD,4BAA4B;AAC5B,sCAAsC;AACtC,aAAa;AACb,YAAY;AAEZ,sGAAsG;AACtG,wBAAwB;AACxB,8BAA8B;AAC9B,kEAAkE;AAClE,QAAQ;AACR,aAAa;AACb,wCAAwC;AACxC,+DAA+D;AAC/D,MAAM;AACN,IAAI"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file://E%3A/islamic-donation-management-system/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAeA,cAAc;AAdd,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAKzE,SAASE,IAAI,EAAEC,KAAK,GAAE;AAStB,iCAAiC;;;;;;;;AAEjC,OAAO,MAAMG,eAAe,6CAAA;IAC1BC,MAAAA,GAASC;IACTC,EAAAA,OAAAA;IAAAA,CAAWC;IAAAA;QACb,EAAC,UAAA;YAAA;YAAA;gBAED,YAAA;oBAAA,CAAc;oBAAA,CAEd,yBAFkD;oBAElD,yDAA4D;wBAC5D,KAAO,KAAA,CAAMC;wBAAAA,QAAc;4BAAA,GAAIX,CAAAA,gBAAmB;4BAAA;yBAAA;;mBAChDY,YAAY;;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;YAAA;SAAA;;SACNC,UAAU;cACV,IAAA;YAAA,MAAA,4BAA2C;iBAC3CC,MAAAA,MAAY,EAAA;wBAAA;4BACZC,KAAAA,CAAAA,GAAAA,CAAU,0KAAVA,CAAAA,sBAAU,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACVC,OAAAA,uSAAU,EAAE,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACd,MAAA,CAAA,YAAA,CAAA;wBACAC;qBAAAA,MAAU;gBACRC,YAAYnB;UACd;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA;QACF,CAAE,YAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}