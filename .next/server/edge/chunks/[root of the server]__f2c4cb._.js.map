{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.ts"],"sourcesContent":["// src/middleware.ts\n\nimport { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\nimport { getDataFromToken } from \"@/helpers/getDataFromToken\";\n\nexport async function middleware(request: NextRequest) {\n  const path = request.nextUrl.pathname;\n  const isPublicPath = ['/login', '/signup', '/verifyemail', '/'].includes(path);  // Public routes\n  const token = request.cookies.get('token')?.value || '';  // Get token from cookies\n\n  let userRole = '';\n\n  // Check if token exists and extract user role\n  if (token) {\n    try {\n      const { id, role, username } = await getDataFromToken(request);  // Assuming `getDataFromToken` extracts the role from the token\n      userRole = role;\n    } catch (error) {\n      return NextResponse.redirect(new URL('/login', request.nextUrl));  // Invalid token\n    }\n  }\n\n  // Define role-based access\n  const rolePaths = {\n    Admin: ['/admin', '/user', '/dashboard','/user-pages/user/profile','/campaign/create-campaign'],\n    Donor: ['/user-pages/user/profile', '/dashboard', '/user','/campaign/create-campaign'],\n    Organizer: ['/organizer', '/user', '/events', '/campaign/create-campaign','/user-pages/user/profile'],\n  };\n\n  // Helper function to check if a path is allowed for a particular role\n  const isAuthorized = (role: string, path: string) => {\n    return rolePaths[role]?.includes(path) || isPublicPath;\n  };\n\n  // Case 1: Redirect logged-in users trying to access public paths\n  if (isPublicPath && token) {\n    return NextResponse.redirect(new URL('/', request.nextUrl));  // Redirect authenticated users from public pages to home\n  }\n\n  // Case 2: Redirect unauthenticated users trying to access non-public paths\n  if (!isPublicPath && !token) {\n    return NextResponse.redirect(new URL('/login', request.nextUrl));  // Redirect unauthenticated users to login page\n  }\n\n  // Case 3: Check if the user has permission to access the requested path based on their role\n  if (token && !isAuthorized(userRole, path)) {\n    return NextResponse.redirect(new URL('/', request.nextUrl));  // Redirect unauthorized users to the home page (or other appropriate page)\n  }\n\n  // Allow the request to continue if everything is valid\n  return NextResponse.next();\n}\n\n// Configuration to match the paths\nexport const config = {\n  matcher: [\n    '/', '/user-pages/user/profile', '/login', '/signup', '/verifyemail', \n    '/admin', '/user', '/organizer', '/events', '/campaign/create-campaign'\n  ],  // List of paths where the middleware should be applied\n};\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AAEpB;AAEA;AAFA;;;AAIO,eAAe,WAAW,OAAoB;IACnD,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IACrC,MAAM,eAAe;QAAC;QAAU;QAAW;QAAgB;KAAI,CAAC,QAAQ,CAAC,OAAQ,gBAAgB;IACjG,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU,SAAS,IAAK,yBAAyB;IAEnF,IAAI,WAAW;IAEf,8CAA8C;IAC9C,IAAI,OAAO;QACT,IAAI;YACF,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAA,GAAA,2HAAA,CAAA,mBAAgB,AAAD,EAAE,UAAW,+DAA+D;YAChI,WAAW;QACb,EAAE,OAAO,OAAO;YACd,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,OAAO,IAAK,gBAAgB;QACrF;IACF;IAEA,2BAA2B;IAC3B,MAAM,YAAY;QAChB,OAAO;YAAC;YAAU;YAAS;YAAa;YAA2B;SAA4B;QAC/F,OAAO;YAAC;YAA4B;YAAc;YAAQ;SAA4B;QACtF,WAAW;YAAC;YAAc;YAAS;YAAW;YAA4B;SAA2B;IACvG;IAEA,sEAAsE;IACtE,MAAM,eAAe,CAAC,MAAc;QAClC,OAAO,SAAS,CAAC,KAAK,EAAE,SAAS,SAAS;IAC5C;IAEA,iEAAiE;IACjE,IAAI,gBAAgB,OAAO;QACzB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,OAAO,IAAK,yDAAyD;IACzH;IAEA,2EAA2E;IAC3E,IAAI,CAAC,gBAAgB,CAAC,OAAO;QAC3B,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,OAAO,IAAK,+CAA+C;IACpH;IAEA,4FAA4F;IAC5F,IAAI,SAAS,CAAC,aAAa,UAAU,OAAO;QAC1C,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,OAAO,IAAK,2EAA2E;IAC3I;IAEA,uDAAuD;IACvD,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;QAAK;QAA4B;QAAU;QAAW;QACtD;QAAU;QAAS;QAAc;QAAW;KAC7C;AACH"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}