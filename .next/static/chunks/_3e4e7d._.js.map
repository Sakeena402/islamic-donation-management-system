{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://E%3A/islamic-donation-management-system/components/forms/GeneralForm.tsx"],"sourcesContent":["// /components/forms/GeneralForm.tsx\r\nimport React, { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport SubmitButton from \"@/components/forms/SubmitButton\";\r\nimport useTogglePasswordVisibility from \"@/hooks/useTogglePasswordVisibility\";\r\nimport useFormValidation from \"@/hooks/useFormValidation\";\r\nimport { signupSchema, loginSchema } from \"@/schemas/validationSchema\";\r\n\r\ninterface Field {\r\n  name: string;\r\n  label: string;\r\n  type: string;\r\n  required?: boolean;\r\n}\r\n\r\ninterface GeneralFormProps {\r\n  fields: Field[];\r\n  buttonText: string;\r\n  onSubmit: (formData: { [key: string]: string }) => Promise<void>;\r\n  redirectPath: string;\r\n  validationSchema?: any; // Define schema type based on form context\r\n}\r\n\r\nconst GeneralForm: React.FC<GeneralFormProps> = ({\r\n  fields,\r\n  buttonText,\r\n  onSubmit,\r\n  redirectPath,\r\n  validationSchema,\r\n}) => {\r\n  const router = useRouter();\r\n  const [formData, setFormData] = useState<{ [key: string]: string }>(\r\n    fields.reduce((acc, field) => ({ ...acc, [field.name]: \"\" }), {})\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const { errors, validate } = useFormValidation(validationSchema);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const isValid = await validate(formData);\r\n    if (!isValid) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      await onSubmit(formData);\r\n      router.push(redirectPath);\r\n    } catch (error) {\r\n      setError(\"Submission failed. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md\">\r\n      <h2 className=\"text-2xl font-bold text-center text-gray-800\">{buttonText}</h2>\r\n      {error && <p className=\"text-center text-red-600\">{error}</p>}\r\n      <form className=\"space-y-4\" onSubmit={handleSubmit}>\r\n        {fields.map((field) => {\r\n          const { visible, toggleVisibility } = useTogglePasswordVisibility();\r\n          return (\r\n            <div key={field.name} className=\"relative\">\r\n              <label className=\"block text-sm font-medium text-gray-700\">{field.label}</label>\r\n              <input\r\n                type={field.type === \"password\" && visible ? \"text\" : field.type}\r\n                name={field.name}\r\n                value={formData[field.name]}\r\n                onChange={handleChange}\r\n                required={field.required}\r\n                className=\"w-full px-3 py-2 mt-1 border rounded-md text-gray-700 focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n                placeholder={`Enter your ${field.label.toLowerCase()}`}\r\n              />\r\n              {field.type === \"password\" && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={toggleVisibility}\r\n                  className=\"absolute right-3 top-3 text-gray-600 hover:text-gray-800 focus:outline-none\"\r\n                >\r\n                  {visible ? \"üëÅÔ∏è\" : \"üö´\"}\r\n                </button>\r\n              )}\r\n              {errors[field.name] && <p className=\"text-red-500 text-xs mt-1\">{errors[field.name]}</p>}\r\n            </div>\r\n          );\r\n        })}\r\n        <SubmitButton loading={loading} text={buttonText} onClick={handleSubmit} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeneralForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // GeneralForm.tsx (update the styles as needed)\r\n// import React, { useState } from \"react\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import SubmitButton from \"@/components/forms/SubmitButton\";\r\n\r\n// interface Field {\r\n//   name: string;\r\n//   label: string;\r\n//   type: string;\r\n//   required?: boolean;\r\n// }\r\n\r\n// interface GeneralFormProps {\r\n//   fields: Field[];\r\n//   buttonText: string;\r\n//   onSubmit: (formData: { [key: string]: string }) => Promise<void>;\r\n//   redirectPath: string;\r\n// }\r\n\r\n// const GeneralForm: React.FC<GeneralFormProps> = ({\r\n//   fields,\r\n//   buttonText,\r\n//   onSubmit,\r\n//   redirectPath,\r\n// }) => {\r\n//   const router = useRouter();\r\n//   const [formData, setFormData] = useState<{ [key: string]: string }>(\r\n//     fields.reduce((acc, field) => ({ ...acc, [field.name]: \"\" }), {})\r\n//   );\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState<string | null>(null);\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault(); // Prevent default form submission\r\n//     setLoading(true);\r\n//     setError(null);\r\n//     try {\r\n//       await onSubmit(formData);\r\n//       router.push(redirectPath);\r\n//     } catch (error) {\r\n//       setError(\"Submission failed. Please try again.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md\">\r\n//       <h2 className=\"text-2xl font-bold text-center text-gray-800\">{buttonText}</h2>\r\n//       {error && <p className=\"text-center text-red-600\">{error}</p>}\r\n//       <form className=\"space-y-4\" onSubmit={handleSubmit}>\r\n//         {fields.map((field) => (\r\n//           <div key={field.name}>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">{field.label}</label>\r\n//             <input\r\n//               type={field.type}\r\n//               name={field.name}\r\n//               value={formData[field.name]}\r\n//               onChange={handleChange}\r\n//               required={field.required}\r\n//               className=\"w-full px-3 py-2 mt-1 border rounded-md text-gray-700 focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//               placeholder={`Enter your ${field.label.toLowerCase()}`} // Placeholder text\r\n//             />\r\n//           </div>\r\n//         ))}\r\n//         <SubmitButton\r\n//           loading={loading}\r\n//           text={buttonText}\r\n//           onClick={handleSubmit}\r\n//         />\r\n//       </form>\r\n   \r\n\r\n\r\n// <p className=\"text-sm text-center text-gray-600\">\r\n//        {buttonText === \"Create Your Account\" ? (\r\n//           <>\r\n//             Already have an account?{\" \"}\r\n//             <a href=\"/login\" className=\"text-indigo-600 hover:underline\">\r\n//             Login\r\n//           </a>\r\n//           </>\r\n//         ) : (\r\n//           <>\r\n//             Do not have an account?{\" \"}\r\n//             <a href=\"/signup\" className=\"text-indigo-600 hover:underline\">\r\n//             SignUp\r\n//           </a>\r\n//           </>\r\n//         )}\r\n//       </p>\r\n      \r\n\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default GeneralForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // GeneralForm.tsx\r\n// 'use client'\r\n// import React, { useState } from \"react\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import SubmitButton from \"@/components/forms/SubmitButton\";\r\n\r\n// interface Field {\r\n//   name: string;\r\n//   label: string;\r\n//   type: string;\r\n//   required?: boolean;\r\n// }\r\n\r\n// interface GeneralFormProps {\r\n//   fields: Field[];\r\n//   buttonText: string;\r\n//   onSubmit: (formData: { [key: string]: string }) => Promise<void>;\r\n//   redirectPath: string;\r\n//   switchForm: () => void; // Function to switch forms\r\n// }\r\n\r\n// const GeneralForm: React.FC<GeneralFormProps> = ({\r\n//   fields,\r\n//   buttonText,\r\n//   onSubmit,\r\n//   redirectPath,\r\n//   switchForm,\r\n// }) => {\r\n//   const router = useRouter();\r\n//   const [formData, setFormData] = useState<{ [key: string]: string }>(\r\n//     fields.reduce((acc, field) => ({ ...acc, [field.name]: \"\" }), {})\r\n//   );\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState<string | null>(null);\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async () => {\r\n//     setLoading(true);\r\n//     setError(null);\r\n//     try {\r\n//       await onSubmit(formData);\r\n//       router.push(redirectPath);\r\n//     } catch (error) {\r\n//       setError(\"Submission failed. Please try again.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"form-container\">\r\n//       <h2 className=\"text-2xl font-bold text-center text-gray-800\">{buttonText}</h2>\r\n//       {error && <p className=\"text-center text-red-600\">{error}</p>}\r\n//       <form className=\"space-y-4\">\r\n//         {fields.map((field) => (\r\n//           <div key={field.name}>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">{field.label}</label>\r\n//             <input\r\n//               type={field.type}\r\n//               name={field.name}\r\n//               value={formData[field.name]}\r\n//               onChange={handleChange}\r\n//               required={field.required}\r\n//               className=\"w-full px-3 py-2 mt-1 border rounded-md text-gray-700 focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//             />\r\n//           </div>\r\n//         ))}\r\n//         <SubmitButton\r\n//           loading={loading}\r\n//           text={buttonText}\r\n//           onClick={handleSubmit}\r\n//         />\r\n//       </form>\r\n//       <p className=\"text-sm text-center text-gray-600\">\r\n//         {buttonText === \"Create Your Account\" ? (\r\n//           <>\r\n//             Already have an account?{\" \"}\r\n//             <button className=\"text-indigo-600 hover:underline\" onClick={switchForm}>\r\n//               Login\r\n//             </button>\r\n//           </>\r\n//         ) : (\r\n//           <>\r\n//             Do not have an account?{\" \"}\r\n//             <button className=\"text-indigo-600 hover:underline\" onClick={switchForm}>\r\n//               Sign Up\r\n//             </button>\r\n//           </>\r\n//         )}\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default GeneralForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // app/signup/components/SignupForm.tsx\r\n// 'use client';\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n\r\n// interface User {\r\n//   username: string;\r\n//   email: string;\r\n//   phoneNo: string;\r\n//   address: string;\r\n//   password: string;\r\n// }\r\n\r\n// interface SignupFormProps {\r\n//   onSubmit: (user: User) => Promise<void>;\r\n// }\r\n\r\n// const SignupForm: React.FC<SignupFormProps> = ({ onSubmit }) => {\r\n//   const [user, setUser] = useState<User>({\r\n//     username: '',\r\n//     email: '',\r\n//     phoneNo: '',\r\n//     address: '',\r\n//     password: '',\r\n//   });\r\n\r\n//   const [buttonDisabled, setButtonDisabled] = useState(true);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const { email, password, username } = user;\r\n//     setButtonDisabled(!(email && password && username));\r\n//   }, [user]);\r\n\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     setLoading(true); // Start loading\r\n//     await onSubmit(user); // Call onSubmit and wait for it to complete\r\n//     setLoading(false); // End loading\r\n//   };\r\n\r\n//   return (\r\n//     <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Full Name</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={user.username}\r\n//           onChange={(e) => setUser({ ...user, username: e.target.value })}\r\n//           required\r\n//           className=\"w-full px-3 py-2 mt-1 border text-gray-700 rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//         />\r\n//       </div>\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n//         <input\r\n//           type=\"email\"\r\n//           value={user.email}\r\n//           onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n//           required\r\n//           className=\"w-full px-3 py-2 mt-1 text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//         />\r\n//       </div>\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Phone Number</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={user.phoneNo}\r\n//           onChange={(e) => setUser({ ...user, phoneNo: e.target.value })}\r\n//           required\r\n//           className=\"w-full px-3 py-2 mt-1 text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//         />\r\n//       </div>\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Address</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={user.address}\r\n//           onChange={(e) => setUser({ ...user, address: e.target.value })}\r\n//           required\r\n//           className=\"w-full px-3 py-2 mt-1 text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//         />\r\n//       </div>\r\n//       <div>\r\n//         <label className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           value={user.password}\r\n//           onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n//           required\r\n//           className=\"w-full px-3 py-2 mt-1 text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//         />\r\n//       </div>\r\n//       <button\r\n//         type=\"submit\"\r\n//         disabled={buttonDisabled || loading}\r\n//         className={`w-full px-4 py-2 font-semibold text-white rounded-md focus:outline-none focus:ring focus:ring-indigo-200 ${\r\n//           buttonDisabled || loading ? 'bg-gray-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'\r\n//         }`}\r\n//       >\r\n//         {loading ? \"Submitting...\" : \"Sign Up\"}\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default SignupForm;\r\n\r\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;;AACpC;AACA;AACA;AACA;AACA;;;;;;;;AAkBA,MAAM,cAA0C,CAAC,EAC/C,MAAM,EACN,UAAU,EACV,QAAQ,EACR,YAAY,EACZ,gBAAgB,EACjB;;;IACC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EACrC,OAAO,MAAM,CAAC,CAAC,KAAK,QAAU,CAAC;YAAE,GAAG,GAAG;YAAE,CAAC,MAAM,IAAI,CAAC,EAAE;QAAG,CAAC,GAAG,CAAC;IAEjE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,UAAiB,AAAD,EAAE;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,eAAe,CAAC;QACpB,YAAY;YAAE,GAAG,QAAQ;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IAC7D;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,MAAM,UAAU,MAAM,SAAS;QAC/B,IAAI,CAAC,SAAS;QAEd,WAAW;QACX,SAAS;QACT,IAAI;YACF,MAAM,SAAS;YACf,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAgD;;;;;;YAC7D,uBAAS,6LAAC;gBAAE,WAAU;0BAA4B;;;;;;0BACnD,6LAAC;gBAAK,WAAU;gBAAY,UAAU;;oBACnC,OAAO,GAAG,KAAC,CAAC;;wBACX,MAAM,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,UAA2B,AAAD;wBAChE,qBACE,6LAAC;4BAAqB,WAAU;;8CAC9B,6LAAC;oCAAM,WAAU;8CAA2C,MAAM,KAAK;;;;;;8CACvE,6LAAC;oCACC,MAAM,MAAM,IAAI,KAAK,cAAc,UAAU,SAAS,MAAM,IAAI;oCAChE,MAAM,MAAM,IAAI;oCAChB,OAAO,QAAQ,CAAC,MAAM,IAAI,CAAC;oCAC3B,UAAU;oCACV,UAAU,MAAM,QAAQ;oCACxB,WAAU;oCACV,aAAa,CAAC,WAAW,EAAE,MAAM,KAAK,CAAC,WAAW,IAAI;;;;;;gCAEvD,MAAM,IAAI,KAAK,4BACd,6LAAC;oCACC,MAAK;oCACL,SAAS;oCACT,WAAU;8CAET,UAAU,QAAQ;;;;;;gCAGtB,MAAM,CAAC,MAAM,IAAI,CAAC,kBAAI,6LAAC;oCAAE,WAAU;8CAA6B,MAAM,CAAC,MAAM,IAAI,CAAC;;;;;;;2BApB3E,MAAM,IAAI;;;;;oBAuBxB;;4BAzBwC,uIAAA,CAAA,UAA2B;;;kCA0BnE,6LAAC,uIAAA,CAAA,UAAY;wBAAC,SAAS;wBAAS,MAAM;wBAAY,SAAS;;;;;;;;;;;;;;;;;;AAInE;GAxEM;;QAOW,qIAAA,CAAA,YAAS;QAKK,6HAAA,CAAA,UAAiB;;;KAZ1C;uCA0ES;;;;;;CAgCf,mDAAmD;CACnD,2CAA2C;CAC3C,+CAA+C;CAC/C,8DAA8D;CAE9D,oBAAoB;CACpB,kBAAkB;CAClB,mBAAmB;CACnB,kBAAkB;CAClB,wBAAwB;CACxB,IAAI;CAEJ,+BAA+B;CAC/B,qBAAqB;CACrB,wBAAwB;CACxB,sEAAsE;CACtE,0BAA0B;CAC1B,IAAI;CAEJ,qDAAqD;CACrD,YAAY;CACZ,gBAAgB;CAChB,cAAc;CACd,kBAAkB;CAClB,UAAU;CACV,gCAAgC;CAChC,yEAAyE;CACzE,wEAAwE;CACxE,OAAO;CACP,mDAAmD;CACnD,6DAA6D;CAE7D,uEAAuE;CACvE,qEAAqE;CACrE,OAAO;CAEP,yDAAyD;CACzD,6DAA6D;CAC7D,wBAAwB;CACxB,sBAAsB;CACtB,YAAY;CACZ,kCAAkC;CAClC,mCAAmC;CACnC,wBAAwB;CACxB,0DAA0D;CAC1D,kBAAkB;CAClB,2BAA2B;CAC3B,QAAQ;CACR,OAAO;CAEP,aAAa;CACb,oFAAoF;CACpF,uFAAuF;CACvF,uEAAuE;CACvE,6DAA6D;CAC7D,mCAAmC;CACnC,mCAAmC;CACnC,+FAA+F;CAC/F,qBAAqB;CACrB,kCAAkC;CAClC,kCAAkC;CAClC,6CAA6C;CAC7C,wCAAwC;CACxC,0CAA0C;CAC1C,8JAA8J;CAC9J,4FAA4F;CAC5F,iBAAiB;CACjB,mBAAmB;CACnB,cAAc;CACd,wBAAwB;CACxB,8BAA8B;CAC9B,8BAA8B;CAC9B,mCAAmC;CACnC,aAAa;CACb,gBAAgB;CAIhB,oDAAoD;CACpD,mDAAmD;CACnD,eAAe;CACf,4CAA4C;CAC5C,4EAA4E;CAC5E,oBAAoB;CACpB,iBAAiB;CACjB,gBAAgB;CAChB,gBAAgB;CAChB,eAAe;CACf,2CAA2C;CAC3C,6EAA6E;CAC7E,qBAAqB;CACrB,iBAAiB;CACjB,gBAAgB;CAChB,aAAa;CACb,aAAa;CAIb,aAAa;CACb,OAAO;CACP,KAAK;CAEL,8BAA8B;CA4B9B,qBAAqB;CACrB,eAAe;CACf,2CAA2C;CAC3C,+CAA+C;CAC/C,8DAA8D;CAE9D,oBAAoB;CACpB,kBAAkB;CAClB,mBAAmB;CACnB,kBAAkB;CAClB,wBAAwB;CACxB,IAAI;CAEJ,+BAA+B;CAC/B,qBAAqB;CACrB,wBAAwB;CACxB,sEAAsE;CACtE,0BAA0B;CAC1B,wDAAwD;CACxD,IAAI;CAEJ,qDAAqD;CACrD,YAAY;CACZ,gBAAgB;CAChB,cAAc;CACd,kBAAkB;CAClB,gBAAgB;CAChB,UAAU;CACV,gCAAgC;CAChC,yEAAyE;CACzE,wEAAwE;CACxE,OAAO;CACP,mDAAmD;CACnD,6DAA6D;CAE7D,uEAAuE;CACvE,qEAAqE;CACrE,OAAO;CAEP,uCAAuC;CACvC,wBAAwB;CACxB,sBAAsB;CACtB,YAAY;CACZ,kCAAkC;CAClC,mCAAmC;CACnC,wBAAwB;CACxB,0DAA0D;CAC1D,kBAAkB;CAClB,2BAA2B;CAC3B,QAAQ;CACR,OAAO;CAEP,aAAa;CACb,uCAAuC;CACvC,uFAAuF;CACvF,uEAAuE;CACvE,qCAAqC;CACrC,mCAAmC;CACnC,mCAAmC;CACnC,+FAA+F;CAC/F,qBAAqB;CACrB,kCAAkC;CAClC,kCAAkC;CAClC,6CAA6C;CAC7C,wCAAwC;CACxC,0CAA0C;CAC1C,8JAA8J;CAC9J,iBAAiB;CACjB,mBAAmB;CACnB,cAAc;CACd,wBAAwB;CACxB,8BAA8B;CAC9B,8BAA8B;CAC9B,mCAAmC;CACnC,aAAa;CACb,gBAAgB;CAChB,0DAA0D;CAC1D,oDAAoD;CACpD,eAAe;CACf,4CAA4C;CAC5C,wFAAwF;CACxF,sBAAsB;CACtB,wBAAwB;CACxB,gBAAgB;CAChB,gBAAgB;CAChB,eAAe;CACf,2CAA2C;CAC3C,wFAAwF;CACxF,wBAAwB;CACxB,wBAAwB;CACxB,gBAAgB;CAChB,aAAa;CACb,aAAa;CACb,aAAa;CACb,OAAO;CACP,KAAK;CAEL,8BAA8B;CAmD9B,0CAA0C;CAC1C,gBAAgB;CAEhB,sDAAsD;CAEtD,mBAAmB;CACnB,sBAAsB;CACtB,mBAAmB;CACnB,qBAAqB;CACrB,qBAAqB;CACrB,sBAAsB;CACtB,IAAI;CAEJ,8BAA8B;CAC9B,6CAA6C;CAC7C,IAAI;CAEJ,oEAAoE;CACpE,6CAA6C;CAC7C,oBAAoB;CACpB,iBAAiB;CACjB,mBAAmB;CACnB,mBAAmB;CACnB,oBAAoB;CACpB,QAAQ;CAER,gEAAgE;CAChE,mDAAmD;CAEnD,sBAAsB;CACtB,kDAAkD;CAClD,2DAA2D;CAC3D,gBAAgB;CAEhB,yDAAyD;CACzD,0BAA0B;CAC1B,yCAAyC;CACzC,yEAAyE;CACzE,wCAAwC;CACxC,OAAO;CAEP,aAAa;CACb,2DAA2D;CAC3D,cAAc;CACd,uFAAuF;CACvF,iBAAiB;CACjB,wBAAwB;CACxB,kCAAkC;CAClC,6EAA6E;CAC7E,qBAAqB;CACrB,0JAA0J;CAC1J,aAAa;CACb,eAAe;CACf,cAAc;CACd,mFAAmF;CACnF,iBAAiB;CACjB,yBAAyB;CACzB,+BAA+B;CAC/B,0EAA0E;CAC1E,qBAAqB;CACrB,0JAA0J;CAC1J,aAAa;CACb,eAAe;CACf,cAAc;CACd,0FAA0F;CAC1F,iBAAiB;CACjB,wBAAwB;CACxB,iCAAiC;CACjC,4EAA4E;CAC5E,qBAAqB;CACrB,0JAA0J;CAC1J,aAAa;CACb,eAAe;CACf,cAAc;CACd,qFAAqF;CACrF,iBAAiB;CACjB,wBAAwB;CACxB,iCAAiC;CACjC,4EAA4E;CAC5E,qBAAqB;CACrB,0JAA0J;CAC1J,aAAa;CACb,eAAe;CACf,cAAc;CACd,sFAAsF;CACtF,iBAAiB;CACjB,4BAA4B;CAC5B,kCAAkC;CAClC,6EAA6E;CAC7E,qBAAqB;CACrB,0JAA0J;CAC1J,aAAa;CACb,eAAe;CACf,gBAAgB;CAChB,wBAAwB;CACxB,+CAA+C;CAC/C,kIAAkI;CAClI,+GAA+G;CAC/G,cAAc;CACd,UAAU;CACV,kDAAkD;CAClD,kBAAkB;CAClB,cAAc;CACd,OAAO;CACP,KAAK;CAEL,6BAA6B"}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":["file://E%3A/islamic-donation-management-system/components/AuthLayout.tsx"],"sourcesContent":["// AuthLayout.tsx\r\nimport React from 'react';\r\n\r\nconst AuthLayout: React.FC<{ children: React.ReactNode; backgroundImage: string }> = ({ children, backgroundImage }) => {\r\n  return (\r\n    <div className=\"flex min-h-screen\">\r\n      <div\r\n        className=\"w-2/3 bg-cover bg-center\"\r\n        style={{ backgroundImage: `url(${backgroundImage})` }}\r\n      ></div>\r\n      <div className=\"w-1/2 flex items-center justify-center bg-gray-50\">\r\n      \r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthLayout;\r\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;;;AAGjB,MAAM,aAA+E,CAAC,EAAE,QAAQ,EAAE,eAAe,EAAE;IACjH,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,WAAU;gBACV,OAAO;oBAAE,iBAAiB,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;gBAAC;;;;;;0BAEtD,6LAAC;gBAAI,WAAU;0BAEZ;;;;;;;;;;;;AAIT;KAbM;uCAeS"}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 503, "column": 0}, "map": {"version":3,"sources":["file://E%3A/islamic-donation-management-system/app/%28auth-pages%29/login/page.tsx"],"sourcesContent":["// LoginPage.tsx\r\n'use client'\r\nimport React from \"react\";\r\nimport GeneralForm from \"@/components/forms/GeneralForm\";\r\nimport axios from \"axios\";\r\nimport router from \"next/router\";\r\nimport AuthLayout from \"@/components/AuthLayout\"; // Import the layout\r\n\r\nconst LoginPage = () => {\r\n  const onLogin = async (user: { email: string; password: string }) => {\r\n    try {\r\n      const response = await axios.post(\"/api/auth/login\", user);\r\n      console.log(\"Login successful\");\r\n      router.push('/user/profile'); // Redirect to dashboard or desired page\r\n    } catch (error: any) {\r\n      console.log(\"Login failed\", error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthLayout backgroundImage=\"https://wallpapers.com/images/hd/1920-x-1080-hd-c65hirjqswhsd1z3.jpg\"> \r\n      <GeneralForm\r\n        fields={[\r\n          { name: \"email\", label: \"Email\", type: \"email\", required: true },\r\n          { name: \"password\", label: \"Password\", type: \"password\", required: true },\r\n        ]}\r\n        buttonText=\"Login\"\r\n        onSubmit={onLogin}\r\n        redirectPath=\"/user/profile\" \r\n      />\r\n    </AuthLayout>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // pages/login.tsx\r\n// 'use client'\r\n// import React, { useState } from \"react\";\r\n// import GeneralForm from \"@/components/forms/GeneralForm\";\r\n// import axios from \"axios\";\r\n// import { useRouter } from \"next/navigation\";\r\n\r\n// const LoginPage = () => {\r\n//   const router = useRouter();\r\n//   const [isSignup, setIsSignup] = useState(false);\r\n\r\n//   const onLogin = async (user: { email: string; password: string }) => {\r\n//     try {\r\n//       const response = await axios.post(\"/api/auth/login\", user);\r\n//       console.log(\"Login success\");\r\n//       router.push('/dashboard'); // Redirect to dashboard after successful login\r\n//     } catch (error) {\r\n//       console.log(\"Login failed\", error);\r\n//     }\r\n//   };\r\n\r\n//   const switchForm = () => {\r\n//     setIsSignup(!isSignup);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <div className=\"left-side\"></div>\r\n//       <div className=\"right-side\">\r\n//         {isSignup ? (\r\n//           <GeneralForm\r\n//             fields={[\r\n//               { name: \"username\", label: \"Full Name\", type: \"text\", required: true },\r\n//               { name: \"email\", label: \"Email\", type: \"email\", required: true },\r\n//               { name: \"phoneNo\", label: \"Phone Number\", type: \"text\", required: true },\r\n//               { name: \"address\", label: \"Address\", type: \"text\", required: true },\r\n//               { name: \"password\", label: \"Password\", type: \"password\", required: true },\r\n//             ]}\r\n//             buttonText=\"Create Your Account\"\r\n//             onSubmit={onLogin}\r\n//             redirectPath=\"/login\"\r\n//             switchForm={switchForm}\r\n//           />\r\n//         ) : (\r\n//           <GeneralForm\r\n//             fields={[\r\n//               { name: \"email\", label: \"Email\", type: \"email\", required: true },\r\n//               { name: \"password\", label: \"Password\", type: \"password\", required: true },\r\n//             ]}\r\n//             buttonText=\"Login\"\r\n//             onSubmit={onLogin}\r\n//             redirectPath=\"/profile\"\r\n//             switchForm={switchForm}\r\n//           />\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // app/login/page.tsx\r\n// 'use client'\r\n// import React from \"react\";\r\n// import GeneralForm from \"@/components/forms/GeneralForm\";\r\n// import axios from \"axios\";\r\n// import router from \"next/router\";\r\n\r\n// const LoginPage = () => {\r\n\r\n  \r\n//   const onLogIn = async (user: { email: string; password: string }) => {\r\n//     try {\r\n      \r\n//       const response = await axios.post(\"/api/auth/login\", user);\r\n//       console.log(\"Login sucess\")\r\n//       router.push('/user/profile'); \r\n//     // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n//     } catch (error:any) {\r\n//       console.log(\"Login failed\", error.message);\r\n      \r\n  \r\n  \r\n//   }\r\n \r\n//   };\r\n\r\n\r\n//   return (\r\n//       <GeneralForm\r\n//       fields={[\r\n//         { name: \"email\", label: \"Email\", type: \"email\", required: true },\r\n//         { name: \"password\", label: \"Password\", type: \"password\", required: true },\r\n//       ]}\r\n//       buttonText=\"Login\"\r\n//       onSubmit={onLogIn}\r\n//       redirectPath=\"/user/profile\" // Redirect after successful login\r\n//     />\r\n    \r\n    \r\n    \r\n//   );\r\n// };\r\n\r\n// export default LoginPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// /* eslint-disable @typescript-eslint/no-unused-vars */\r\n// 'use client'\r\n// import { useEffect, useState } from \"react\";\r\n// import Link from \"next/link\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import axios from 'axios';\r\n// import React from \"react\";\r\n\r\n\r\n// const Login = () => {\r\n//   const [user, setUser] = useState({\r\n//     email: '',\r\n//    password: '',\r\n  \r\n//   });\r\n//   const [buttonDisabled,setButtonDisabled]=useState(true);\r\n//   const [loading,setLoading]=useState(false);\r\n//   const router = useRouter();\r\n//   useEffect(()=>{\r\n//     if(user.email.length>0 && user.password.length >0){\r\n//       setButtonDisabled(false)\r\n//     }else{\r\n//       setButtonDisabled(true)\r\n//     }\r\n//   },[user])\r\n\r\n\r\n//   const onLogIn = async () => {\r\n//     try {\r\n      \r\n//     } catch (error) {\r\n      \r\n//     }try {\r\n//       setLoading(true)\r\n//       setButtonDisabled(true)\r\n//       const response = await axios.post(\"/api/auth/login\", user);\r\n//       console.log(\"Login sucess\")\r\n//       router.push('/user/profile'); \r\n//     // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n//     } catch (error:any) {\r\n//       console.log(\"Login failed\", error.message);\r\n      \r\n  \r\n//   }finally {\r\n//     setTimeout(() => {\r\n//       setLoading(false);\r\n//       setButtonDisabled(false);\r\n//   }, 1000);\r\n//   }\r\n \r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n//       <div className=\"w-full max-w-md p-8 space-y-6 bg-white rounded-lg shadow-md\">\r\n//         <h2 className=\"text-2xl font-bold text-center text-gray-800\">\r\n//           Login to Your Account\r\n//         </h2>\r\n//         <form  className=\"space-y-6\">\r\n//           <div>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">\r\n//               Email\r\n//             </label>\r\n//             <input\r\n//             type=\"email\"\r\n//             value={user.email}\r\n//             onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n//             required\r\n//             className=\"w-full px-3 py-2 mt-1  text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//          />\r\n//           </div>\r\n//           <div>\r\n//             <label className=\"block text-sm font-medium text-gray-700\">\r\n//               Password\r\n//             </label>\r\n//             <input\r\n//                type=\"password\"\r\n//                value={user.password}\r\n//                onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n//                required\r\n//                className=\"w-full px-3 py-2 mt-1 text-gray-700 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500\"\r\n//               />\r\n//           </div>\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={onLogIn}\r\n//             disabled={buttonDisabled}\r\n//             className={`w-full px-4 py-2 font-semibold text-white rounded-md focus:outline-none focus:ring focus:ring-indigo-200 ${\r\n//                 buttonDisabled ? 'bg-gray-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'\r\n//             }`}\r\n//         >\r\n//             {loading ? 'Processing...' : 'Login'}\r\n//         </button>\r\n\r\n\r\n//         </form>\r\n//         <p className=\"text-sm text-center text-gray-600\">\r\n//           Don&apos;t have an account?{\" \"}\r\n//           <Link href=\"/signup\" className=\"text-indigo-600 hover:underline\">\r\n//            Sign Up\r\n//           </Link>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 746, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}